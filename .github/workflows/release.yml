name: Post-release jobs

on:
  release:
    types: [published]

jobs:
  container:
    name: Container image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: GitHub Package Registry
        uses: aevea/action-kaniko@master
        with:
          registry: docker.pkg.github.com
          password: ${{ secrets.GITHUB_TOKEN }}
          image: server
          cache: true
          cache_registry: cache

      - name: Alpine. Dockerhub
        uses: aevea/action-kaniko@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: schemathesis/schemathesis
          cache: true
          cache_registry: schemathesis/cache

      - name: Alpine. Dockerhub stable
        uses: aevea/action-kaniko@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: schemathesis/schemathesis
          cache: true
          tag: stable
          cache_registry: schemathesis/cache

      - run: echo "buster_tag=$(echo -n ${GITHUB_REF} | sed -E 's/refs\/(heads|tags)\///g' | sed -e 's/\//-/g' | cat - <(echo "-buster"))" >> $GITHUB_ENV

      - name: Buster. Dockerhub
        uses: aevea/action-kaniko@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: schemathesis/schemathesis
          build_file: Dockerfile.buster
          tag: ${{ env.buster_tag }}
          cache: true
          cache_registry: schemathesis/cache

      - name: Buster. Dockerhub stable
        uses: aevea/action-kaniko@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: schemathesis/schemathesis
          build_file: Dockerfile.buster
          cache: true
          tag: stable-buster
          cache_registry: schemathesis/cache

  release_package:
    name: Build and publish package to pypi.org
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - run: pip install poetry

    - name: Build package
      run: poetry build --no-interaction

    - name: Publish package
      run: poetry publish --no-interaction --username=${PYPI_USERNAME} --password=${PYPI_PASSWORD}
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}


  release-notes:
    name: Release Notes
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Release Notary Action
      uses: docker://aevea/release-notary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
