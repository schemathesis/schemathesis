name: Build jobs
# Triggered by changes in code-specific or job-specific files

on:
  pull_request:
    paths:
      - "**.py"
      - ".github/workflows/*.yml"
      - ".pylintrc"
      - ".pre-commit-config.yaml"
      - ".pydocstyle"
      - ".relint.yml"
      - ".yamllint"
      - "poetry.lock"
      - "pyproject.toml"
      - "tox.ini"
      - "mypy.ini"
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  pre-commit:
    name: Generic pre-commit checks
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.9

      - run: pip install pre-commit
      - run: SKIP=pylint,mypy pre-commit run --all-files

  pylint:
    name: Pylint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.9

      - run: pip install pre-commit
      - run: pre-commit run pylint --all-files

  mypy:
    name: Mypy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.9

      - run: pip install pre-commit
      - run: pre-commit run mypy --all-files

  docs:
    name: Documentation check
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"

  tests:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    name: ${{ matrix.os }}/tests_${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: "${{ matrix.python }}"

      - run: pip install tox coverage poetry

      - name: Run ${{ matrix.python }} tox job
        run: tox -e py${TOX_JOB//.} # Strip dot from python version to match tox job
        env:
          TOX_JOB: ${{ matrix.python }}

      - run: coverage combine
      - run: coverage report
      - run: coverage xml -i

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          file: ./coverage.xml

  pytest-5:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        tox_job:
          - py3-pytest53

    name: ${{ matrix.os }}/tests_${{ matrix.tox_job }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.7

      - run: pip install tox coverage poetry

      - name: Run ${{ matrix.tox_job }} tox job
        run: tox -e ${{ matrix.tox_job }}

      - run: coverage combine
      - run: coverage report
      - run: coverage xml -i

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          file: ./coverage.xml

  pytest-6:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        tox_job:
          - py3-pytest6

    name: ${{ matrix.os }}/tests_${{ matrix.tox_job }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.7

      - run: pip install tox coverage poetry

      - name: Run ${{ matrix.tox_job }} tox job
        run: tox -e ${{ matrix.tox_job }}

      - run: coverage combine
      - run: coverage report
      - run: coverage xml -i

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          file: ./coverage.xml

  hypothesis-6-48:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        tox_job:
          - py3-hypothesis-6-48

    name: ${{ matrix.os }}/tests_${{ matrix.tox_job }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v3.1.0
        with:
          python-version: 3.8

      - run: pip install tox coverage poetry

      - name: Run ${{ matrix.tox_job }} tox job
        run: tox -e ${{ matrix.tox_job }}

      - run: coverage combine
      - run: coverage report
      - run: coverage xml -i

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          file: ./coverage.xml
