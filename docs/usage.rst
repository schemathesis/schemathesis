.. _usage:

Usage
=====

Storing network requests
------------------------

For debugging purposes, it can be useful to store all requests generated by Schemathesis and all responses from the app into
a separate file. Schemathesis allows you to do this with ``-store-network-log`` command-line option:

.. code:: bash

    $ schemathesis run --store-network-log=cassette.yaml http://127.0.0.1/schema.yaml

This command will create a new YAML file that will network interactions in `VCR format <https://relishapp.com/vcr/vcr/v/5-1-0/docs/cassettes/cassette-format>`_.
It might look like this:

.. code:: yaml

    command: 'schemathesis run --store-network-log=cassette.yaml http://127.0.0.1/schema.yaml'
    recorded_with: 'Schemathesis 1.2.0'
    http_interactions:
    - id: '0'
      status: 'FAILURE'
      seed: '1'
      elapsed: '0.00123'
      recorded_at: '2020-04-22T17:52:51.275318'
      request:
        uri: 'http://127.0.0.1/api/failure'
        method: 'GET'
        headers:
          ...
        body:
          encoding: 'utf-8'
          base64_string: ''
      response:
        status:
          code: '500'
          message: 'Internal Server Error'
        headers:
          ...
        body:
          encoding: 'utf-8'
          base64_string: 'NTAwOiBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3I='
        http_version: '1.1'

Schemathesis provides the following extra fields:

- ``command``. Full CLI command used to run Schemathesis.
- ``http_interactions.id``. A numeric interaction ID within the current cassette.
- ``http_interactions.status``. Type of test outcome, is one of ``SUCCESS``, ``FAILURE``, ``ERROR``.
- ``http_interactions.seed``. Hypothesis seed used in that particular case could be used as an argument to ``--hypothesis-seed`` CLI option to reproduce this request.
- ``http_interactions.elapsed``. Time in seconds that a request took.

To work with the cassette you could use `yq <https://github.com/mikefarah/yq>`_ or any similar tool.
Show response body content of first failed interaction:

.. code:: bash

    $ yq r foo.yaml 'http_interactions.(status==FAILURE).response.body.base64_string' | head -n 1 | base64 -d
    500: Internal Server Error

Check payload in requests to ``/api/upload_file``:

.. code:: bash

    $ yq r foo.yaml 'http_interactions.(request.uri==http://127.0.0.1/api/upload_file).request.body.base64_string' | base64 -d
    --7d4db38ad065994d913cb02b2982e3ba
    Content-Disposition: form-data; name="data"; filename="data"


    --7d4db38ad065994d913cb02b2982e3ba--
